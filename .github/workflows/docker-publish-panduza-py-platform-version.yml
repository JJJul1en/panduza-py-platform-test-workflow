# Sur le repo suivant :
#
# https://github.com/Panduza/panduza-py-platform/pkgs/container/panduza-py-platform
#
# Tu dois générer les images suivantes:
#
# Si l’utilisateur pousse sur la branche main
#
# panduza-py-platform:latest
# panduza-py-platform-dev:latest (la même image sans les plugins installés)
#
# Si l’utilisateur pousse sur un tag
#
# panduza-py-platform:version
# panduza-py-platform-dev:version (la même image sans les plugins installés)

name: Docker build panduza-py-platform version

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags:
      - '*'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: "panduza-py-platform"
          - image: "panduza-py-platform-dev"
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

# IF TAG PUSHED

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags : type = raw, value = ${{ github.ref_name }}


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image panduza-py-platform version
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
